<?php
/**
 * @CreateTime:   2021/1/3 1:21 上午
 * @Author:       huizhang  <2788828128@qq.com>
 * @Copyright:    copyright(2020) Easyswoole all rights reserved
 * @Description:  延迟队列进程处理
 */

namespace Huizhang\DelayQueue;

use EasySwoole\Component\Process\Socket\AbstractUnixProcess;
use EasySwoole\Component\Process\Socket\UnixProcessConfig;
use Swoole\Coroutine;
use Swoole\Coroutine\Socket;

class ConsumerProcess extends AbstractUnixProcess
{

    public function __construct(UnixProcessConfig $config)
    {
        ini_set('memory_limit', '4096M');
        parent::__construct($config);
    }

    public function run($arg)
    {
        /** @var $queue Queue */
        $queue = $arg;
        /** @var $consumer ConsumerAbstract */
        $namespace = "{$queue->getClass()}";
        $consumer = new $namespace;
        $consumer->queue = $queue;
        $consumer->init();
        for ($i = 0; $i < $queue->getCoroutineNum(); $i++) {
            Coroutine::create(function () use ($queue, $consumer) {
                while (true) {
                    $data = Core::getInstance()
                        ->pop(
                            $queue->getRedisAlias()
                            , $queue->getAlias()
                            , time() - $queue->getDelayTime()
                            , $queue->getLimit()
                        );
                    if (!empty($data)) {
                        $consumer->deal($data);
                    }
                    Coroutine::sleep(1);
                }
                // TODO:: 处理异常时数据应怎样处理
                // TODO:: 处理异常时协程如何处理，只退出某协程？还是全部退出？。。。
                // TODO:: 从延迟队列取出的数据，要进行文件落地, 防止特殊情况下的数据丢失
            });
        }
        return parent::run($arg); // TODO: Change the autogenerated stub
    }

    function onAccept(Socket $socket)
    {
        // TODO: Implement onAccept() method.
    }
}
